<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>The Metro Jethros – Upcoming Gigs</title>
    <link rel="stylesheet" href="/css/style.css" />
    <!-- <style>
      :root {
        --color-bg: #1e1b2e;
        --color-surface: #2a243a;
        --color-primary: #ff4e00;
        --color-secondary: #e7e247;
        --color-accent: #39b54a;
        --color-muted: #ccc;
        --color-border: #2d89ef;
        --color-text: #fefefe;
        --color-card-bg: #2f2b3d;
        --color-shadow: #333;
        --color-hover-glow: hsl(220, 80%, 55%);
      }

      body {
        font-family: system-ui, sans-serif;
        padding: 2rem;
        background: var(--color-bg);
        color: var(--color-text);
      }

      h1 {
        text-align: center;
        font-size: 2rem;
        margin-bottom: 1.5rem;
      }

      #gig-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }

      .gig-card {
        background: var(--color-card-bg);
        padding: 1rem;
        margin: 1rem 0;
        border-radius: 10px;
        box-shadow: 0 0 8px var(--color-shadow);
        transition: transform 0.2s, box-shadow 0.2s;
        border-left: 4px solid var(--color-border);
        color: var(--color-text);
      }

      .gig-card:hover {
        transform: scale(1.02);
        box-shadow: 0 0 12px var(--color-hover-glow);
      }

      .time {
        font-size: 0.9rem;
        color: var(--color-muted);
      }

      @keyframes fadeInUp {
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style> -->
  </head>
  <body>
    <main>
      <h1>Upcoming Shows</h1>

      <section id="gig-list">
        <p>Loading gigs...</p>
      </section>

      <script>
        async function loadGigs() {
          const container = document.getElementById("gig-list");
          container.innerHTML = "<p>Loading gigs...</p>";

          try {
            const res = await fetch("/gigs.json");
            const gigs = await res.json();

            if (!gigs.length) {
              container.innerHTML = "<p>No gigs found.</p>";
              return;
            }

            gigs.sort((a, b) => new Date(a.date) - new Date(b.date));
            container.innerHTML = "";

            const grouped = {};
            gigs.forEach((gig) => {
              const date = new Date(gig.date);
              const month = date.toLocaleDateString(undefined, {
                month: "long",
                year: "numeric",
              });
              if (!grouped[month]) grouped[month] = [];
              grouped[month].push(gig);
            });

            const now = new Date();

            for (const month in grouped) {
              const monthHeader = document.createElement("h2");
              monthHeader.textContent = month;
              container.appendChild(monthHeader);

              grouped[month].forEach((gig) => {
                const div = document.createElement("div");
                div.classList.add("gig-card", "fade-in");

                const date = new Date(gig.date);
                const isNew = now - date < 24 * 60 * 60 * 1000;

                div.innerHTML = `
                  <strong>${date.toLocaleDateString(undefined, {
                    weekday: "short",
                    month: "short",
                    day: "numeric",
                    year: "numeric",
                  })}</strong><br>
                  <span>${gig.venue}</span><br>
                  <em>${gig.city}</em><br>
                  <span class="time">${gig.time}</span>
                  ${isNew ? '<span class="new-badge">NEW</span>' : ""}
                `;

                container.appendChild(div);
              });
            }
          } catch (err) {
            container.innerHTML = `<p>❌ Failed to load gigs: ${err.message}</p>`;
          }
        }

        loadGigs();
      </script>
    </main>
  </body>
</html>
